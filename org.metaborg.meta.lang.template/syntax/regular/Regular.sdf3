module regular/Regular

imports kernel/Kernel constants/IntCon symbols/Symbols constants/StrCon labels/Labels sorts/Sorts
 
context-free syntax 

// Symbol.Empty = <()>
Symbol.Sequence = <(<head:Symbol> <tail:Symbol+>)>
// Symbol.Tuple = <\<<head:Symbol> , <rest:Symbol+; separator=",">\>>


Symbol.Opt = <<Symbol>?>
Symbol.Iter = <<Symbol>+>
Symbol.IterStar = <<Symbol>*>
Symbol.IterSep = <{<Symbol> <sep:Separator>}+>
Symbol.IterStarSep = <{<Symbol> <sep:Separator>}*>



SortSymbol.Opt = <<Sort>?>
SortSymbol.Iter = <<Sort>+>
SortSymbol.IterStar = <<Sort>*>
SortSymbol.IterSep = <{<Sort> <sep:Separator>}+>
SortSymbol.IterStarSep = <{<Sort> <sep:Separator>}*>
Separator.Lit = <<StrCon>>


Symbol = <<SortSymbol>?> {reject}
Symbol = <<SortSymbol>+> {reject}
Symbol = <<SortSymbol>*> {reject}
Symbol = <{<SortSymbol> <sep:Separator>}+> {reject}
Symbol = <{<SortSymbol> <sep:Separator>}*> {reject}



//Symbol.Func = <(<arguments:Symbols> =\> <results:Symbol>)>
//"left":Symbol "|" "right":Symbol              - > Symbol {right,cons("alt")}
Symbol.Alt = <<Symbol> | <Symbol>> {right}
// "(" "left":Symbol "->" "right":Symbol ")"     -> Symbol {cons("strategy")}
//Symbol.Strategy = <(<Symbol> -\> <Symbol> )>
 
context-free priorities 
{Symbol.Opt
 Symbol.IterStar
 Symbol.Iter} >
 Symbol.Alt >
 Symbol.Label