module layout-constraints/Layout-Constraints

imports constants/NatCon

lexical syntax

  LayoutVar = [a-zA-Z] [a-zA-Z0-9]* 
  LayoutVar = "all" {reject}

lexical restrictions

  LayoutVar -/- [a-zA-Z0-9]
  "all" -/- [a-zA-Z0-9]

context-free syntax
   
  ConstraintTree.Tree = NatCon 
  Constraint.Num = <num(<NatCon>)> 
  Constraint = LayoutVar 
  Constraint.All = <all(<LayoutVar>, <Constraint>, <Constraint> )> 
  ConstraintToken.First = <<ConstraintTree>.first> 
  ConstraintToken.Left = <<ConstraintTree>.left> 
  ConstraintToken.Right = <<ConstraintTree>.right> 
  ConstraintToken.Last = <<ConstraintTree>.last> 
  Constraint.Line = <<ConstraintToken>.line> 
  Constraint.Col = <<ConstraintToken>.col> 
  Constraint.Not = <!<Constraint>> 
  Constraint.Mul = <<Constraint> * <Constraint>> 
  Constraint.Div = <<Constraint> / <Constraint>> 
  Constraint.Add = <<Constraint> + <Constraint>> 
  Constraint.Sub = <<Constraint> - <Constraint>> 
  Constraint.Eq = <<Constraint> == <Constraint>> 
  Constraint.Lt = <<Constraint> \< <Constraint>> 
  Constraint.Le = <<Constraint> \<= <Constraint>> 
  Constraint.Gt = <<Constraint> \> <Constraint>> 
  Constraint.Ge = <<Constraint> \>= <Constraint>> 
  Constraint.And = <<Constraint> && <Constraint>> 
  Constraint.Or = <<Constraint> || <Constraint>> 

context-free priorities

    Constraint.Not > {right:
    Constraint.Mul
    Constraint.Div } > {right:
    Constraint.Add
    Constraint.Sub} > {right:
    Constraint.Eq 
    Constraint.Lt 
    Constraint.Le
    Constraint.Gt 
    Constraint.Ge} > {right:
    Constraint.And} > {right:
    Constraint.Or}
    
    
context-free syntax

  NewLayoutConstraint.Constraint   = <<LCOperand> <LCOperation> <LCOperand>>
  
  
  LCOperation.GreaterThan        = [>]
  LCOperation.GreaterThanEqual   = [>=]
  LCOperation.LessThan           = [<]
  LCOperation.LessThanEqual      = [<=]
  LCOperation.Equal              = [==]
  LCOperand.Line                 = <l_<LCTreeIndex>>
  LCOperand.Column               = <c_<LCTreeIndex>>
  LCOperand.EndLine              = <el_<LCTreeIndex>>
  LCOperand.EndColumn            = <ec_<LCTreeIndex>>
  LCOperand.LineParent           = <l>
  LCOperand.ColumnParent         = <c>
  LCOperand.EndLineParent        = <el>
  LCOperand.EndColumnParent      = <ec>
  LCTreeIndex.Idx                = NatCon