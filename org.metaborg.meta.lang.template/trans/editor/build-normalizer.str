module editor/build-normalizer

imports
  editor/editor-utils
  normalization/-

rules

  sdf3-to-normal-form-sdf:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
    normalized   := <to-normal-form(|$[[project-path]/[<dirname> path]])> selected;
    <?Module(Unparameterized(mn), i*, sections)> ast ;
    chars := <collect-one(?Tokenize(<id; explode-string; un-double-quote-chars>)) <+ !['(', ')']> sections;
    newline := <collect-one(?Newlines(<id>)) <+ !None()> sections;
    kfr := <collect-one(?KeywordFollowRestriction(<id; term-translation>)) <+ !None()> sections;
    result := <to-sdf(|chars, newline, kfr); pp-sdf-to-string <+ !""; debug(!"The sdf file could not be generated.\n"); fail> normalized;
    filename := <create-src-gen(|project-path, "syntax",  "-normalized.sdf")> mn

  sdf3-to-normal-form:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
    <?Module(Unparameterized(mn), i*, sections)> ast ;
    filename := <create-src-gen(|project-path, "syntax",  "-normalized.sdf3")> mn;
    result   := <to-normal-form(|$[[project-path]/[<dirname> path]]); pp-SDF3-string> selected  
    
  sdf3-to-normal-form-abstract:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
    <?Module(Unparameterized(mn), i*, sections)> ast ;
    filename := <create-src-gen(|project-path, "syntax",  "-normalized.aterm")> mn;
    result   := <to-normal-form(|$[[project-path]/[<dirname> path]])> selected
  
  generate-item-sets:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
    <?Module(Unparameterized(mn), i*, sections)> ast ;
      filename := <create-src-gen(|project-path, "parse-table",  ".aterm")> "item-sets" ;
    result   := <to-item-sets <+ debug(!"Grammar is not normalized "); fail> selected

  generate-parse-table:
    (selected, position, ast, path, project-path) -> (filename, result)
    with
    <?Module(Unparameterized(mn), i*, sections)> ast ;
      filename := <create-src-gen(|project-path, "parse-table",  "-parse-table.tbl")> mn;
    result   := <to-parse-table <+ debug(!"Grammar is not normalized "); fail > selected
  
  generate-parse-table-sdf2table-format:
    (selected, position, ast, path, project-path) -> (filename, result')
    with
        <?Module(Unparameterized(mn), i*, sections)> ast ;
        filename := <create-src-gen(|project-path, "parse-table",  "-parse-table.tbl")> mn;
        ref-file := <remove-extension> path;
        reference-pt := <ReadFromFile> $[[ref-file]-reference.tbl];
        result   := <to-parse-table <+ debug(!"Grammar is not normalized "); fail > selected;
        result' := <refactor-pt(|reference-pt)> result
  
  normalize-and-generate-pt:
    (selected, position, ast, path, project-path) -> (filename, result)
    where
        <?Module(Unparameterized(mn), i*, sections)> ast ;
        filename := <create-src-gen(|project-path, "syntax",  "-parse-table.tbl")> mn;
        result   := <to-normal-form(|$[[project-path]/[<dirname> path]]); to-parse-table> selected
        