module SampleGrammars

imports
	
	Blocks 
    	
//Grammar 1
//	SingleStm-permissive
	
//Grammar 2
//	MultStm
	
//Grammar 3
//	ListOfStm

//Grammar 4
//	Expressions 

//Grammar 5
//	StmsAndExpr
	
//Grammar 6
//	ExprInj
	
//Grammar 7
//	OverlapLists
	
//Grammar 8
//	Optional
	
//Grammar 9
//	Blocks
	
//Grammar 1 Kernel 
//	SingleStmKernel	
	
//Grammar 3 Kernel	
//	ListOfStmKernel

//context-free start-symbols
  
//  Start
  
/*  
syntax 

	Start.Expression = E
	E = "(" E ")" {bracket}
	E.Minus = "-" E 
	E.Expon = E "^" E {right} 
	E.Times = E "*" E {left}
	E.Plus = E "+" E {assoc}
	E.Sub = E "-" E
	E.Name = "a"
	
priorities
	E.Minus
	> E.Expon
	> E.Times
	> {left:
		E.Plus
		E.Sub} 


*/