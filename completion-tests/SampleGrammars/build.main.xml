<?xml version="1.0" encoding="UTF-8"?>
<project name="SampleGrammars" default="all">
    
    <!-- Key input modules -->
    <property name="sdfmodule" value="SampleGrammars"/>
	<property name="metasdfmodule" value="Stratego-SampleGrammars"/>
	<property name="esvmodule" value="SampleGrammars"/>
	<property name="strmodule" value="samplegrammars"/>
	<property name="ppmodule" value="SampleGrammars-pp"/>
	<property name="sigmodule" value="SampleGrammars-sig"/> 
	
    <!-- Project directories -->
    <property name="trans" location="trans"/>
    <property name="src-gen" location="editor/java"/>
    <property name="src-dirs" location="editor/java"/>
    <property name="include" location="include"/>
    <property name="lib" location="lib"/>
    <property name="build" location="target/classes"/>
    <property name="sdf-src-gen" location="src-gen"/>
	<property name="pp" location="${sdf-src-gen}/pp"/>
	<property name="signatures" location="${sdf-src-gen}/signatures"/>
	<property name="lib-gen" location="${include}"/>
	<property name="syntax" location="${sdf-src-gen}/syntax"/>
	<property name="syntax.rel" location="${syntax}" relative="yes"/>
	<property name="trans.rel" location="trans" relative="yes"/>
	<property name="include.rel" location="${include}" relative="yes"/>
	<property name="lib-gen.rel" location="${lib-gen}" relative="yes"/>
    
    <!-- Imports -->
    <property name="build.sdf.imports" value=""/>
    <property name="build.stratego.args" value="
                    --library
                    -I &quot;${trans}&quot;
                    -I &quot;${basedir}&quot;
                    -la stratego-lib -la stratego-sglr -la stratego-gpp -la stratego-xtc -la stratego-aterm -la stratego-parallel"/>
    
    <!-- Optional: external .def and .jar locations
    <property name="externaldef" location="syntax/${sdfmodule}.def"/>
    <property name="externaljar" value="../lib.jar"/>
    <property name="externaljarflags" value="-la org.lib"/>
    -->
	
	<macrodef name="normalize">
				<attribute name="input" />
				<attribute name="output" />
				<attribute name="main" />
				<sequential>
					<uptodate-io input="@{input}" output="@{output}" type="sdf2table">
						<action>
							<exec executable="${nativepath}/sdf2table">
								<arg value="-t" />
								<arg value="-i" />
								<arg value="@{input}" />
								<arg value="-m" />
								<arg value="@{main}" />
								<arg value="-o" />
								<arg value="@{output}" />
								<arg value="-n" /> 
							</exec>
						</action>
					</uptodate-io>
				</sequential>
			</macrodef>
		
		<macrodef name="implodePT">
					<attribute name="input" />
					<attribute name="output" />
					<sequential>
						<uptodate-io input="@{input}" output="@{output}" type="implodePT">
							<action>
								<exec executable="${nativepath}/implodePT">
									<arg value="-t" />
									<arg value="-i" />
									<arg value="@{input}" />
									<arg value="-o" />
									<arg value="@{output}" />
								</exec>
							</action>
						</uptodate-io>
					</sequential>
				</macrodef>
		
		<target name="normalize" depends="spoofaximp.default.ctree">
			<for param="input">
				<path>
					<fileset dir="${include}" includes="*-Permissive.def"/>
				</path>
				<sequential>
					<local name="input-basename"/>
					<basename file="@{input}" property="input-basename" suffix="-Permissive.def"/>
					<normalize input="@{input}" main="${sdfmodule}" output="${include}/${input-basename}-normalized.pt"/>
					<implodePT input="${include}/${input-basename}-normalized.pt" output="${include}/${input-basename}-normalized.aterm"/>
					<!-- call pp-sdf to pretty print the normalized grammar and define a builder in SDF2 to generate the item-sets -->
					
				</sequential>
			</for>	
		</target>

    <!-- Environment configuration for command-line builds -->
    <condition property="build.strategoxt.sdf" value="${eclipse.spoofaximp.nativeprefix}" else="">
        <isset property="eclipse.spoofaximp.nativeprefix"/>
    </condition>
    <property name="nativepath" value="${build.strategoxt.sdf}/"/>
	<property location="${user.home}/.nix-profile/bin" name="build.strategoxt.sdf"/>
		
    <!-- used for building inside of Eclipse -->
    <import file="build.generated.xml"/>   

    <!-- Main target -->
    <target name="all" depends="spoofaximp.default.ctree, normalize"/>
    <target name="generate-sources" depends="generate-sources-ctree" />
    <target name="package" depends="package-ctree" />
</project>
