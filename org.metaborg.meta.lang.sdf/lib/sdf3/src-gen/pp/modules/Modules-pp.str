module lib/sdf3/src-gen/pp/modules/Modules-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  lib/sdf3/src-gen/signatures/modules/Modules-sig


imports
  lib/sdf3/src-gen/signatures/kernel/Kernel-sig
  lib/sdf3/src-gen/signatures/renaming/Renaming-sig
  lib/sdf3/src-gen/signatures/symbols/Symbols-sig


imports
  lib/sdf3/src-gen/pp/kernel/Kernel-pp
  lib/sdf3/src-gen/pp/renaming/Renaming-pp
  lib/sdf3/src-gen/pp/symbols/Symbols-pp


strategies
  prettyprint-ModuleWord =
    ![S(<is-string>)]

  prettyprint-ModuleId =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-ModuleWord

  prettyprint-example =
    prettyprint-ModuleId

  prettyprint-ModuleWord :
    amb([h|hs]) -> <prettyprint-ModuleWord> h

  prettyprint-ModuleId :
    amb([h|hs]) -> <prettyprint-ModuleId> h


strategies
  prettyprint-example =
    prettyprint-Module

  prettyprint-example =
    prettyprint-Sections

  prettyprint-example =
    prettyprint-Section

  prettyprint-example =
    prettyprint-ModuleName

  prettyprint-example =
    prettyprint-ImpSection

  prettyprint-example =
    prettyprint-Imports

  prettyprint-example =
    prettyprint-Import

  prettyprint-Module :
    Module(t1__, list__, t2__) -> [ H(
                                      [SOpt(HS(), "0")]
                                    , [S("module "), t1__']
                                    )
                                  , H(
                                      []
                                    , [S("")]
                                    )
                                  , H(
                                      [SOpt(HS(), "0")]
                                    , [list__']
                                    )
                                  , H(
                                      []
                                    , [S("")]
                                    )
                                  , H(
                                      [SOpt(HS(), "0")]
                                    , [t2__']
                                    )
                                  ]
    with t1__' := <pp-one-Z(prettyprint-ModuleName)> t1__
    with list__' := <pp-H-list(prettyprint-ImpSection)> list__
    with t2__' := <pp-one-Z(prettyprint-Sections)> t2__

  is-Module =
    ?Module(_, _, _)

  prettyprint-Sections :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-Sections)
    where t1__' := <pp-V-list(prettyprint-Section)> t1__

  prettyprint-Section :
    SDFSection(t1__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [t1__']
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-Grammar)> t1__

  is-Section =
    ?SDFSection(_)

  prettyprint-ModuleName :
    Unparameterized(t1__) -> [ H(
                                 [SOpt(HS(), "0")]
                               , [t1__']
                               )
                             ]
    with t1__' := <pp-one-Z(prettyprint-ModuleId)> t1__

  is-ModuleName =
    ?Unparameterized(_)

  prettyprint-ModuleName :
    Parameterized(t1__, params__) -> [ H(
                                         [SOpt(HS(), "0")]
                                       , [ t1__'
                                         , S(" [")
                                         , params__'
                                         , S("]")
                                         ]
                                       )
                                     ]
    with t1__' := <pp-one-Z(prettyprint-ModuleId)> t1__
    with params__' := <pp-one-Z(prettyprint-Symbols)> params__

  is-ModuleName =
    ?Parameterized(_, _)

  prettyprint-ImpSection :
    Imports(list__) -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("imports")]
                         )
                       , list__'
                       ]
    with list__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Imports)> list__]

  is-ImpSection =
    ?Imports(_)

  prettyprint-Imports :
    list__ -> [ H(
                  [SOpt(HS(), "0")]
                , [list__']
                )
              ]
    where not(is-Imports)
    where list__' := <pp-V-list(prettyprint-Import|"0", "\t")> list__

  prettyprint-Import :
    Module(t1__) -> [ H(
                        [SOpt(HS(), "0")]
                      , [t1__']
                      )
                    ]
    with t1__' := <pp-one-Z(prettyprint-ModuleName)> t1__

  is-Import =
    ?Module(_)

  is-Module =
    fail

  is-Sections =
    fail

  is-Section =
    fail

  is-ModuleName =
    fail

  is-ImpSection =
    fail

  is-Imports =
    fail

  is-Import =
    fail

  prettyprint-Module :
    amb([h|hs]) -> <prettyprint-Module> h

  prettyprint-Sections :
    amb([h|hs]) -> <prettyprint-Sections> h

  prettyprint-Section :
    amb([h|hs]) -> <prettyprint-Section> h

  prettyprint-ModuleName :
    amb([h|hs]) -> <prettyprint-ModuleName> h

  prettyprint-ImpSection :
    amb([h|hs]) -> <prettyprint-ImpSection> h

  prettyprint-Imports :
    amb([h|hs]) -> <prettyprint-Imports> h

  prettyprint-Import :
    amb([h|hs]) -> <prettyprint-Import> h