module lib/sdf3/src-gen/pp/sorts/Sorts-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  lib/sdf3/src-gen/signatures/sorts/Sorts-sig


imports
  lib/sdf3/src-gen/signatures/kernel/Kernel-sig
  lib/sdf3/src-gen/signatures/symbols/Symbols-sig
  lib/sdf3/src-gen/signatures/basic/Basic-sig
  lib/sdf3/src-gen/signatures/regular/Regular-sig


imports
  lib/sdf3/src-gen/pp/kernel/Kernel-pp
  lib/sdf3/src-gen/pp/symbols/Symbols-pp
  lib/sdf3/src-gen/pp/basic/Basic-pp
  lib/sdf3/src-gen/pp/regular/Regular-pp


strategies
  prettyprint-Sort =
    ![S(<is-string>)]

  prettyprint-example =
    prettyprint-Sort

  prettyprint-Sort :
    amb([h|hs]) -> <prettyprint-Sort> h


strategies
  prettyprint-example =
    prettyprint-Symbol

  prettyprint-example =
    prettyprint-SymbolDef

  prettyprint-example =
    prettyprint-Grammar

  prettyprint-Symbol :
    Sort(t1__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [t1__']
                    )
                  ]
    with t1__' := <pp-one-Z(prettyprint-Sort)> t1__

  is-Symbol =
    ?Sort(_)

  prettyprint-Symbol :
    ParameterizedSort(t1__, parameters__) -> [ H(
                                                 [SOpt(HS(), "0")]
                                               , [ t1__'
                                                 , S(" [[")
                                                 , parameters__'
                                                 , S("]]")
                                                 ]
                                               )
                                             ]
    with t1__' := <pp-one-Z(prettyprint-Sort)> t1__
    with parameters__' := <pp-H-list(prettyprint-Symbol|", ")> parameters__

  is-Symbol =
    ?ParameterizedSort(_, _)

  prettyprint-SymbolDef :
    SortDef(t1__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [t1__']
                       )
                     ]
    with t1__' := <pp-one-Z(prettyprint-Sort)> t1__

  is-SymbolDef =
    ?SortDef(_)

  prettyprint-SymbolDef :
    Cf(t1__) -> [ H(
                    [SOpt(HS(), "0")]
                  , [t1__', S("-CF")]
                  )
                ]
    with t1__' := <pp-one-Z(prettyprint-SymbolDef)> t1__

  is-SymbolDef =
    ?Cf(_)

  prettyprint-SymbolDef :
    Lex(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t1__', S("-LEX")]
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-SymbolDef)> t1__

  is-SymbolDef =
    ?Lex(_)

  prettyprint-SymbolDef :
    Var(t1__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t1__', S("-VAR")]
                   )
                 ]
    with t1__' := <pp-one-Z(prettyprint-SymbolDef)> t1__

  is-SymbolDef =
    ?Var(_)

  prettyprint-Grammar :
    Sorts(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("sorts")]
                     )
                   , H(
                       []
                     , [S("")]
                     )
                   , t1__'
                   , H(
                       []
                     , [S("")]
                     )
                   ]
    with t1__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Symbols)> t1__]

  is-Grammar =
    ?Sorts(_)

  is-Symbol =
    fail

  is-SymbolDef =
    fail

  is-Grammar =
    fail

  prettyprint-Symbol :
    amb([h|hs]) -> <prettyprint-Symbol> h

  prettyprint-SymbolDef :
    amb([h|hs]) -> <prettyprint-SymbolDef> h

  prettyprint-Grammar :
    amb([h|hs]) -> <prettyprint-Grammar> h