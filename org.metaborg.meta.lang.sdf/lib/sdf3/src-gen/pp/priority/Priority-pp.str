module lib/sdf3/src-gen/pp/priority/Priority-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  libstratego-sglr
  lib/sdf3/src-gen/signatures/priority/Priority-sig


imports
  lib/sdf3/src-gen/signatures/kernel/Kernel-sig
  lib/sdf3/src-gen/signatures/constants/NatCon-sig
  lib/sdf3/src-gen/signatures/TemplateLang-sig


imports
  lib/sdf3/src-gen/pp/kernel/Kernel-pp
  lib/sdf3/src-gen/pp/constants/NatCon-pp
  lib/sdf3/src-gen/pp/TemplateLang-pp


strategies
  prettyprint-example =
    prettyprint-Associativity

  prettyprint-example =
    prettyprint-Attribute

  prettyprint-example =
    prettyprint-ArgumentIndicator

  prettyprint-example =
    prettyprint-Group

  prettyprint-example =
    prettyprint-PriorityProduction

  prettyprint-example =
    prettyprint-PriorityProductions

  prettyprint-example =
    prettyprint-Priority

  prettyprint-example =
    prettyprint-Priorities

  prettyprint-example =
    prettyprint-Grammar

  prettyprint-Associativity :
    Left() -> [ H(
                  [SOpt(HS(), "0")]
                , [S("left")]
                )
              ]

  is-Associativity =
    ?Left()

  prettyprint-Associativity :
    Right() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("right")]
                 )
               ]

  is-Associativity =
    ?Right()

  prettyprint-Associativity :
    NonAssoc() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("non-assoc")]
                    )
                  ]

  is-Associativity =
    ?NonAssoc()

  prettyprint-Associativity :
    Assoc() -> [ H(
                   [SOpt(HS(), "0")]
                 , [S("assoc")]
                 )
               ]

  is-Associativity =
    ?Assoc()

  prettyprint-Attribute :
    Bracket() -> [ H(
                     [SOpt(HS(), "0")]
                   , [S("bracket")]
                   )
                 ]

  is-Attribute =
    ?Bracket()

  prettyprint-Attribute :
    Assoc(t1__) -> [ H(
                       [SOpt(HS(), "0")]
                     , [t1__']
                     )
                   ]
    with t1__' := <pp-one-Z(prettyprint-Associativity)> t1__

  is-Attribute =
    ?Assoc(_)

  prettyprint-ArgumentIndicator :
    Default(arguments__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ S("<")
                                , arguments__'
                                , S(">")
                                ]
                              )
                            ]
    with arguments__' := <pp-H-list(prettyprint-NatCon|",")> arguments__

  is-ArgumentIndicator =
    ?Default(_)

  prettyprint-Group :
    WithArguments(t1__, t2__) -> [ H(
                                     [SOpt(HS(), "0")]
                                   , [t1__', S(" "), t2__']
                                   )
                                 ]
    with t1__' := <pp-one-Z(prettyprint-Group)> t1__
    with t2__' := <pp-one-Z(prettyprint-ArgumentIndicator)> t2__

  is-Group =
    ?WithArguments(_, _)

  prettyprint-Group :
    NonTransitive(t1__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [t1__', S(".")]
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-Group)> t1__

  is-Group =
    ?NonTransitive(_)

  prettyprint-Group :
    SimpleGroup(t1__) -> [ H(
                             [SOpt(HS(), "0")]
                           , [t1__']
                           )
                         ]
    with t1__' := <pp-one-Z(prettyprint-PriorityProduction)> t1__

  is-Group =
    ?SimpleGroup(_)

  prettyprint-Group :
    ProdsGroup(t1__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [ S("{")
                            , t1__'
                            , S("}")
                            ]
                          )
                        ]
    with t1__' := <pp-one-Z(prettyprint-PriorityProductions)> t1__

  is-Group =
    ?ProdsGroup(_)

  prettyprint-Group :
    AssocGroup(t1__, t2__) -> [ H(
                                  [SOpt(HS(), "0")]
                                , [ S("{")
                                  , t1__'
                                  , S(":")
                                  ]
                                )
                              , t2__'
                              ]
    with t1__' := <pp-one-Z(prettyprint-Associativity)> t1__
    with t2__' := <pp-indent(|"2")> [ <pp-one-Z(prettyprint-PriorityProductions)> t2__
                                    , S("}")
                                    ]

  is-Group =
    ?AssocGroup(_, _)

  prettyprint-PriorityProduction :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-PriorityProduction)
    where t1__' := <pp-one-Z(prettyprint-SdfProduction)> t1__

  prettyprint-PriorityProduction :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-PriorityProduction)
    where t1__' := <pp-one-Z(prettyprint-Production)> t1__

  prettyprint-PriorityProductions :
    list__ -> [ H(
                  [SOpt(HS(), "0")]
                , [list__']
                )
              ]
    where not(is-PriorityProductions)
    where list__' := <pp-V-list(prettyprint-PriorityProduction)> list__

  prettyprint-Priority :
    Chain(list__) -> [ H(
                         [SOpt(HS(), "0")]
                       , [list__']
                       )
                     ]
    with list__' := <pp-H-list(prettyprint-Group|" > ")> list__

  is-Priority =
    ?Chain(_)

  prettyprint-Priority :
    Assoc(t1__, t2__, t3__) -> [ H(
                                   [SOpt(HS(), "0")]
                                 , [ t1__'
                                   , S(" ")
                                   , t2__'
                                   , S(" ")
                                   , t3__'
                                   ]
                                 )
                               ]
    with t1__' := <pp-one-Z(prettyprint-Group)> t1__
    with t2__' := <pp-one-Z(prettyprint-Associativity)> t2__
    with t3__' := <pp-one-Z(prettyprint-Group)> t3__

  is-Priority =
    ?Assoc(_, _, _)

  prettyprint-Priorities :
    list__ -> [ H(
                  [SOpt(HS(), "0")]
                , [list__']
                )
              ]
    where not(is-Priorities)
    where list__' := <pp-V-list(prettyprint-Priority|"0", ",")> list__

  prettyprint-Grammar :
    Priorities(t1__) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("priorities")]
                          )
                        , H(
                            []
                          , [S("")]
                          )
                        , t1__'
                        , H(
                            []
                          , [S("")]
                          )
                        ]
    with t1__' := <pp-indent(|"2")> [<pp-one-Z(prettyprint-Priorities)> t1__]

  is-Grammar =
    ?Priorities(_)

  is-Associativity =
    fail

  is-Attribute =
    fail

  is-ArgumentIndicator =
    fail

  is-Group =
    fail

  is-PriorityProduction =
    fail

  is-PriorityProductions =
    fail

  is-Priority =
    fail

  is-Priorities =
    fail

  is-Grammar =
    fail

  prettyprint-Associativity :
    amb([h|hs]) -> <prettyprint-Associativity> h

  prettyprint-Attribute :
    amb([h|hs]) -> <prettyprint-Attribute> h

  prettyprint-ArgumentIndicator :
    amb([h|hs]) -> <prettyprint-ArgumentIndicator> h

  prettyprint-Group :
    amb([h|hs]) -> <prettyprint-Group> h

  prettyprint-PriorityProduction :
    amb([h|hs]) -> <prettyprint-PriorityProduction> h

  prettyprint-PriorityProductions :
    amb([h|hs]) -> <prettyprint-PriorityProductions> h

  prettyprint-Priority :
    amb([h|hs]) -> <prettyprint-Priority> h

  prettyprint-Priorities :
    amb([h|hs]) -> <prettyprint-Priorities> h

  prettyprint-Grammar :
    amb([h|hs]) -> <prettyprint-Grammar> h