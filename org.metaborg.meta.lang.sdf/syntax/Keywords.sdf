module Keywords

%% adds keyword-like syntax (and highlighting) for supported annotations
%% and different abstract syntax for constructors without cons: {"Simple"} 

imports
  languages/sdf2/syntax/Sdf2

exports

  context-free syntax
    Constructor                 -> Attribute {prefer, cons("Constructor")}
    "recover"                   -> Attribute {prefer, ast("term(default(fun(unquoted(\"recover\"))))")}
    "completion"                -> Attribute {prefer, ast("term(default(fun(unquoted(\"completion\"))))")}
    "incremental"               -> Attribute {prefer, ast("term(default(fun(unquoted(\"incremental\"))))")}
    "deprecated"                -> Attribute {prefer, ast("term(default(fun(unquoted(\"deprecated\"))))")}
    "deprecated" "(" StrCon ")" -> Attribute {prefer, ast("term(default(appl(unquoted(\"deprecated\"), [fun(quoted(<1>))])))")}
    "ast" "(" StrCon ")"        -> Attribute {prefer, ast("term(default(appl(unquoted(\"ast\"), [fun(quoted(<1>))])))")}
    "cons" "(" Constructor ")"  -> Attribute {prefer, ast("term(default(appl(unquoted(\"cons\"), [fun(quoted(<1>))])))")}
    StrCon                      -> Constructor
    
    
