module src-gen/pp/regular/Regular-pp

imports
  libstratego-gpp
  runtime/tmpl/pp
  src-gen/signatures/regular/Regular-sig


imports
  src-gen/signatures/kernel/Kernel-sig
  src-gen/signatures/constants/IntCon-sig
  src-gen/signatures/symbols/Symbols-sig
  src-gen/signatures/constants/StrCon-sig
  src-gen/signatures/labels/Labels-sig


imports
  src-gen/pp/kernel/Kernel-pp
  src-gen/pp/constants/IntCon-pp
  src-gen/pp/symbols/Symbols-pp
  src-gen/pp/constants/StrCon-pp
  src-gen/pp/labels/Labels-pp


strategies
  prettyprint-example =
    prettyprint-Symbol

  prettyprint-example =
    prettyprint-Separator

  prettyprint-Symbol :
    Opt(t0__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t0__', S("?")]
                   )
                 ]
    with t0__' := <pp-one-Z(prettyprint-Symbol)> t0__

  is-Symbol =
    ?Opt(_)

  prettyprint-Symbol :
    Iter(t0__) -> [ H(
                      [SOpt(HS(), "0")]
                    , [t0__', S("+")]
                    )
                  ]
    with t0__' := <pp-one-Z(prettyprint-Symbol)> t0__

  is-Symbol =
    ?Iter(_)

  prettyprint-Symbol :
    IterStar(t0__) -> [ H(
                          [SOpt(HS(), "0")]
                        , [t0__', S("*")]
                        )
                      ]
    with t0__' := <pp-one-Z(prettyprint-Symbol)> t0__

  is-Symbol =
    ?IterStar(_)

  prettyprint-Symbol :
    IterSep(t0__, sep__) -> [ H(
                                [SOpt(HS(), "0")]
                              , [ S("{")
                                , t0__'
                                , S(" ")
                                , sep__'
                                , S("}+")
                                ]
                              )
                            ]
    with t0__' := <pp-one-Z(prettyprint-Symbol)> t0__
    with sep__' := <pp-one-Z(prettyprint-Separator)> sep__

  is-Symbol =
    ?IterSep(_, _)

  prettyprint-Symbol :
    IterStarSep(t0__, sep__) -> [ H(
                                    [SOpt(HS(), "0")]
                                  , [ S("{")
                                    , t0__'
                                    , S(" ")
                                    , sep__'
                                    , S("}*")
                                    ]
                                  )
                                ]
    with t0__' := <pp-one-Z(prettyprint-Symbol)> t0__
    with sep__' := <pp-one-Z(prettyprint-Separator)> sep__

  is-Symbol =
    ?IterStarSep(_, _)

  prettyprint-Separator :
    Lit(t0__) -> [ H(
                     [SOpt(HS(), "0")]
                   , [t0__']
                   )
                 ]
    with t0__' := <pp-one-Z(prettyprint-StrCon)> t0__

  is-Separator =
    ?Lit(_)

  is-Symbol =
    fail

  is-Separator =
    fail