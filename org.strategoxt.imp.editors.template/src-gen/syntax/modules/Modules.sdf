module modules/Modules
imports kernel/Kernel renaming/Renaming symbols/Symbols

exports
  lexical syntax
    [A-Za-z0-9\_\-]+        -> ModuleWord {cons("Word")}
    ModuleWord              -> ModuleId   {cons("Leaf")}
    "/" ModuleId            -> ModuleId   {cons("Root")}
    ModuleWord "/" ModuleId -> ModuleId   {cons("Path")}

  context-free syntax
    "module" ModuleName list:ImpSection* Sections -> Module     {cons("Module")}
    Section*                                      -> Sections   
    Grammar                                       -> Section    {cons("SDFSection")}
    ModuleId                                      -> ModuleName {cons("Unparameterized")}
    ModuleId "[" params:Symbols "]"               -> ModuleName {cons("Parameterized")}
    "id" "(" ModuleName ")"                       -> Attribute  {cons("Id")}
    "imports" list:Imports                        -> ImpSection {cons("Imports")}
    list:Import*                                  -> Imports    
    ModuleName                                    -> Import     {cons("Module")}
    "(" Import ")"                                -> Import     {bracket}

  context-free syntax
    CONTENTCOMPLETE -> Module     {cons("COMPLETION-Module")}
    CONTENTCOMPLETE -> Sections   {cons("COMPLETION-Sections")}
    CONTENTCOMPLETE -> Section    {cons("COMPLETION-Section")}
    CONTENTCOMPLETE -> ModuleName {cons("COMPLETION-ModuleName")}
    CONTENTCOMPLETE -> Attribute  {cons("COMPLETION-Attribute")}
    CONTENTCOMPLETE -> ImpSection {cons("COMPLETION-ImpSection")}
    CONTENTCOMPLETE -> Imports    {cons("COMPLETION-Imports")}
    CONTENTCOMPLETE -> Import     {cons("COMPLETION-Import")}

  lexical restrictions
    ModuleWord -/- [A-Za-z0-9\_\-]
    ModuleId -/- [\/]