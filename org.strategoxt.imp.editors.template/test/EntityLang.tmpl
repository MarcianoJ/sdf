// Grammar for the EntityLang language
// By default, based on an example "entities" syntax

context-free start-symbols
  Start

template options
  keyword -/- [A-Za-z0-9]

// context-free syntax
//
//   "module" ID Definition*       -> Start {cons("Module")}
//   "entity" ID "{" Property* "}" -> Definition {cons("Entity")}
//   ID ":" Type                   -> Property {cons("Property")}
//   ID                            -> Type {cons("Type")}

templates

  Start.Module = <
    module <ID>

    <Definition*; separator="\n">
  >

  Definition.Entity = <
    entity <ID> {
      <Property*; separator="\n">
    }
  >

  Property.Property = <
    <ID> : <Type>
  >

  Type.Type = <<ID>>

lexical syntax

  [a-zA-Z][a-zA-Z0-9]* -> ID
  "-"? [0-9]+          -> INT

  "\"" StringChar* "\"" -> STRING
  ~[\"\n]               -> StringChar
  "\\\""                -> StringChar
  BackSlashChar         -> StringChar
  "\\"                  -> BackSlashChar

  [\ \t\n\r] -> LAYOUT

  [\*]                             -> CommentChar
  "/*" (~[\*] | CommentChar)* "*/" -> LAYOUT
  "//" ~[\n\r]* ([\n\r] | EOF)     -> LAYOUT

  -> EOF

lexical restrictions

  %% Ensure greedy matching for lexicals

  CommentChar   -/- [\/]
  INT           -/- [0-9]
  ID            -/- [a-zA-Z0-9\_]

  %% EOF may not be followed by any char

  EOF           -/- ~[]

  %% Backslash chars in strings may not be followed by "

  BackSlashChar -/- [\"]

context-free restrictions

  %% Ensure greedy matching for comments

  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]
