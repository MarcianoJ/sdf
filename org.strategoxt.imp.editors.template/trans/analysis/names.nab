module analysis/names

imports 
  include/TemplateLang
  analysis/types
  libstrc
  
 
namespaces
  
  Module Sort Constructor Label 
  // Option
  
properties

  def of Constructor       : SdfProduction
  sort of Constructor      : Sort
  
binding rules

  Module(Unparameterized(m), i*, s*):
    defines Module m 
   //   of def 'module(unparameterized(m), i*, s*)
    scopes Sort, Constructor //, Option
    
  Module(Unparameterized(m)):
    imports Sort, Constructor from Module m
  
  p@SdfProductionWithCons(SortCons(Sort(s), Constructor(c)), rhs, attrs): 
    defines non-unique Sort s 
    defines unique Constructor c
      of type FunType(ty*, SortType(s))
      of sort s
      of def p 
      where rhs has type ty*
  
  p@SdfProduction(Sort(s), rhs, attrs): 
    defines non-unique Sort s 
    //implicitly defines unique Constructor Inj()
  //    of type FunType(ty*, SortType(s))
   //   of def p
  //    where rhs has type ty*
          
  p@TemplateProductionWithCons(SortCons(Sort(s), Constructor(c)), t, attrs): 
    defines non-unique Sort s 
    defines unique Constructor c
      of type FunType(ty*, SortType(s))
      of sort s
      of def p
      where t has type ty*
  
  p@TemplateProduction(Sort(s), t, attrs): 
    defines non-unique Sort s 
  // implicitly defines unique Constructor Inj()
   //   of type FunType(ty*, SortType(s))
   //   of def p
  //    where t has type ty*
  
  
  Placeholder(label, Sort(s), t, options):
  	refers to Sort s
  	
 SortConsRef(Sort(s), Constructor(c)):
  	refers to Sort s
  	refers to Constructor c of sort s	
  	
  	
  // can productions scope labels instead?
 // Rhs(_): scopes Label
  
//  Label(l):
 //   defines Label l
     
 // SortCons(Sort(s), Constructor(c)):
 // 	refers to Sort s
 // 	refers to Constructor c of sort s
    
 // Sort(s):
 //   refers to Sort s
    
// binding rules
// 
//   Newlines(o):
//     implicitly defines 
//       non-unique Option Newlines() 
//       of value o
//   
//   KeywordFollowRestriction(lah):
//     implicitly defines 
//       non-unique Option KeywordFollowRestriction()
//       of value lah
//       
//   Tokenize(t):
//     implicitly defines
//       non-unique Option Tokenize()
//       of value t
      