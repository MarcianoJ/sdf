module templatelang/analyze

imports
  include/TemplateLang
  templatelang/utils/attributes
  templatelang/utils/contract
  templatelang/utils/stubs
  templatelang/desugar

signature
  constructors
    TemplateBySort     : SymbolType
    TemplateBySortCons : SymbolType
    TemplateOption     : SymbolType

signature
  constructors
    Newlines                 : TemplateOption
    KeywordFollowRestriction : TemplateOption
    Tokenize                 : TemplateOption

strategies

  templatelang-declare-section:
    section @ TemplateSection(prod*) -> <id>
    where
      with-spxverify(
        <list-loop(templatelang-declare-template)> prod*
      )

  templatelang-declare-template:
    Desugared(prod @ TemplateProduction(sort, _, attrs)) -> <id>
    where
      with-spxverify(
        <index-symbol-definition> (sort, TemplateBySort(), prod);
        if cons := <fetch-cons-name> attrs then
          sortcons := (sort, cons);
          <index-symbol-definition> (sortcons, TemplateBySortCons(), prod)
        end
      )

  templatelang-declare-template =
    templatelang-not-desugared(|"analyze")

strategies

  //resolve templatelang options
  templatelang-get-option =
    if not(TemplateLangCachedOption => result) then
      ? key
      ; with-spxverify(
          result := <resolve-symbol-definition> (key, TemplateOption())
          , !"Failed to get template option"
        )
      ; rules( TemplateLangCachedOption : key -> result )
    end
    ; !result

  templatelang-index-option =
    ? (key, value)
    ; with-spxverify(
        <index-symbol-definition> (key, TemplateOption(), value)
        , !"Failed to index template option"
      )

  templatelang-init-options =
    with-spxverify(
      if not(<resolve-symbol-definition> (Newlines(), TemplateOption())) then
          <templatelang-index-option> (Newlines(), None())
        ; <templatelang-index-option> (KeywordFollowRestriction(), None())
        ; <templatelang-index-option> (Tokenize(), ['(', ')'])
      end
    )

  templatelang-declare-section:
    TemplateOptions(opt*) -> <id>
    where
      with-spxverify(
        <list-loop(templatelang-declare-option)> opt*
      )

  templatelang-declare-option:
    Newlines(t) -> <id>
    where
      with-spxverify(
        <templatelang-index-option> (Newlines(), t)
      )

  templatelang-declare-option:
    KeywordFollowRestriction(t) -> <id>
    where
      with-spxverify(
        <templatelang-index-option> (KeywordFollowRestriction(), t)
      )

  templatelang-declare-option:
    Tokenize(t) -> <id>
    where
      with-spxverify(
        t' := <explode-string; un-double-quote-chars> t;
        <templatelang-index-option> (Tokenize(), t')
      )
