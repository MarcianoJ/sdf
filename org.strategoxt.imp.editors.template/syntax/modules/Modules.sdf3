module modules/Modules

imports kernel/Kernel 
        renaming/Renaming
        symbols/Symbols
 
context-free start-symbols 
  Module

lexical syntax
    //letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
	ModuleWord.Word = [A-Za-z0-9\_\-]+
	
    ModuleId.Leaf =  ModuleWord
    //sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
    ModuleId.Root = "/" ModuleId
    //dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
    ModuleId.Path = ModuleWord "/" ModuleId
    
templates
	Definition = <<list:Module*>>
	
	Module.Module = <module <ModuleName> <list:ImpSection*> <Sections>>
	
	//Section.Exports = <exports <Grammar>>
	//Section.Hiddens = <hiddens <Grammar>>
	
    Sections = <<list:Section*>>
    
    Section.SDFSection = <<Grammar>>
	
	ModuleName.Unparameterized = <<ModuleId>>
	ModuleName.Parameterized = <<ModuleId> [<params:Symbols>]>
	
	Attribute.Id = <id (<ModuleName>) >
	
	ImpSection.Imports = <imports <list:Imports>>
	
	//Grammar.ImpSection = <<ImpSection>> IGNORED PRODUCTION
	
	Imports = <<list:Import*>>
	
	Import.Module = <<ModuleName>>
	//Import.RenamedModule = <<ModuleName> <Renamings>> IGNORED PRODUCTION
	Import = <(<Import>)> {bracket}

  lexical restrictions
    ModuleWord -/- [A-Za-z0-9\_\-]
    ModuleId -/- [\/]
