module sorts/Sorts

imports kernel/Kernel
symbols/Symbols
basic/Basic
regular/Regular

lexical syntax
	//head:[A-Z] -> Sort {cons("one-char")}
    Sort.OneChar = [A-Z]
    //head:[A-Z] middle:[A-Za-z0-9\-]* last:[A-Za-z0-9] -> Sort {cons("more-chars")}
    Sort.MoreChars = [A-Z] [A-Za-z0-9\-]* [A-Za-z0-9]
     
context-free syntax
Symbol.Sort = <<Sort>>
Symbol.ParameterizedSort = <<Sort> [[<parameters:{Symbol ", "}+>]]>
SymbolDef.SortDef = <<Sort>> {prefer}
SymbolDef.Cf = <<SymbolDef>-CF> {prefer}
SymbolDef.Lex = <<SymbolDef>-LEX> {prefer}
SymbolDef.Var = <<SymbolDef>-VAR> {prefer}

Grammar.Sorts = <
	sorts

		<Symbols>
		
		>
 
lexical restrictions
    Sort -/- [A-Za-z0-9]

context-free priorities

Symbol.Alt > { SymbolDef.Cf SymbolDef.Lex SymbolDef.Var Symbol.Cf Symbol.Lex Symbol.Varsym}