module kernel/Kernel
imports aterms/Aterms symbols/Symbols grammar/Grammars

exports
  context-free syntax
    aterm:ATerm                              -> ATermAttribute {cons("Default")}
    ATermAttribute                           -> Attribute      {cons("Term")}
    "{" {Attribute ","}* "}"                 -> Attributes     {cons("Attrs")}
                                             -> Attributes     {cons("NoAttrs")}
    Symbols "-" ">" result:Symbol Attributes -> Production     {cons("Prod")}
    Production*                              -> Productions    
    "syntax" Productions                     -> Grammar        {cons("Syntax")}

  context-free syntax
    CONTENTCOMPLETE -> ATermAttribute {cons("COMPLETION-ATermAttribute")}
    CONTENTCOMPLETE -> Attribute      {cons("COMPLETION-Attribute")}
    CONTENTCOMPLETE -> Attributes     {cons("COMPLETION-Attributes")}
    CONTENTCOMPLETE -> Production     {cons("COMPLETION-Production")}
    CONTENTCOMPLETE -> Productions    {cons("COMPLETION-Productions")}
    CONTENTCOMPLETE -> Grammar        {cons("COMPLETION-Grammar")}