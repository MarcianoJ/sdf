module sdf3/Modules

imports sdf3/Kernel 
        sdf3/Renaming

context-free start-symbols 
  Module

lexical syntax
    //letters:[A-Za-z0-9\_\-]+ -> ModuleWord  {cons("word")}
	ModuleWord.Word = [A-Za-z0-9\_\-]+
	
    ModuleId.Leaf =  ModuleWord
    //sep:"/" basename:ModuleId            -> ModuleId  {cons("root")}
    ModuleId = "/" ModuleId
    //dirname:ModuleWord sep:"/" basename:ModuleId -> ModuleId  {cons("path")}
    ModuleId.Path = ModuleWord "/" ModuleId
    
templates
	Definition = <<list:Module*>>
	
	Module.Module = <module <ModuleName> <list:ImpSection*> <Sections>>
	
	Section.Exports = <exports <Grammar>>
	Section.Hiddens = <hiddens <Grammar>>
	
	Sections = <<list:Section*>>
	
	ModuleName.Unparameterized = <<ModuleId>>
	ModuleName.Parameterized = <<ModuleId> [<params:Symbols>]>
	
	ImpSection.Imports = <imports <list:Imports>>
	
	Grammar.ImpSection = <<ImpSection>>
	
	Imports = <<list:Import*>>
	
	Import.Module = <<ModuleName>>
	Import.RenamedModule = <<ModuleName> <Renamings>>
	Import = <(<Import>)> {bracket}

  lexical restrictions
    ModuleWord -/- [A-Za-z0-9\_\-]
    ModuleId -/- [\/]
