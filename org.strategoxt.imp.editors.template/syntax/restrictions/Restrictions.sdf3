module restrictions/Restrictions
  
imports characterclass/CC 
		characterclass/Character-Class
		symbols/Symbols 
		constants/StrCon

templates
  
Lookahead.CharClass = <<CharClass>>
Lookahead.Seq = <<CharClass>.<Lookaheads>>  

Lookaheads.Single = <<Lookahead>>
//"left":Lookaheads "|" "right":Lookaheads -> Lookaheads  {cons("alt"),right}
Lookaheads.Alt = <<Lookaheads> | <Lookaheads>> {right}
Lookaheads = <(<Lookaheads>)> {bracket}
Lookaheads.List = <[[<list:Lookahead*; separator=",">]]>

Restriction.Follow = <<Symbols> -/- <Lookaheads>>
 
Restrictions = <<list:Restriction*>>
 
Grammar.Restrictions = <restrictions <Restrictions>>

Attribute.Reject = <reject>
Attribute.Prefer = <prefer>
Attribute.Avoid = <avoid> 
Attribute.Deprecated = <deprecated> {prefer}
Attribute.Deprecated = <deprecated (<StrCon>)> {prefer}

context-free priorities    
    Lookahead.Seq > 
    Lookaheads.Alt